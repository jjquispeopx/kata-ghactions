---
- hosts: all
  become: yes

  vars:
    nginx_compose_folder: /opt/nginx

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages.
      apt:
        state: present
        update_cache: yes
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip

    - name: Add Docker GPG apt Key.
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository.
      apt_repository:
        repo: 'deb https://download.docker.com/linux/ubuntu bionic stable'
        state: present

    - name: Update apt and install docker-ce.
      apt: 
        update_cache: true
        state: latest
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io

    - name: Install docker-compose.
      get_url: 
        url: 'https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64'
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'

    - name: Create symlink for docker-compose.
      file:
        src: /usr/local/bin/docker-compose
        dest: /usr/bin/docker-compose
        state: link

    - name: Install Docker module for Python.
      pip:
        name: docker

    - name: Crete docker network.
      community.docker.docker_network:
        name: nginx-net
        state: present

    - name: Create directory for nginx service.
      file:
        path: '{{ nginx_compose_folder }}'
        state: directory

    - name: Add nginx service compose example.
      template:
        src: 'templates/nginx.yml.js'
        dest: '{{ nginx_compose_folder }}/nginx.yml'
        owner: root
        owner: root
        mode: 0600

    - name: Launch nginx service.
      shell: |
        docker-compose -f '{{ nginx_compose_folder }}/nginx.yml' up -d
