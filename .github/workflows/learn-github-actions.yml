name: learn-github-actions

on:
  push:
    paths:
      - 'backend/'
      - '**/learn-github-actions.yml'
  workflow_dispatch:

env:
  BACKEND_DIR: 'backend'

jobs:

  secrets-analysis:
    runs-on: ubuntu-latest
    name: Analisys secrets
    steps:
      - uses: actions/checkout@v2
      - name: trufflehog scaning
        run: |
          docker run --rm -v "$(pwd):/proj" dxa4481/trufflehog --regex -x .trufflehog file:///proj
          exit 0
      - name: Upload output file
        uses: actions/upload-artifact@v2
        with:
          name: trufflehog-scan
          path: trufflehog-scan.txt

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.BACKEND_DIR }}
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          npm ci
          ls

  release:
    runs-on: ubuntu-latest
    name: build docker image
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.BACKEND_DIR }}
          file: ${{ env.BACKEND_DIR }}/Dockerfile
          tags: user/app:latest

  example-job:
    runs-on: ubuntu-latest
    name: Save output
    steps:
      - shell: bash
        run: |
          echo "hello humans.!" > output.log
      - name: Upload output file
        uses: actions/upload-artifact@v2
        with:
          name: output-log-file
          path: output.log

  example-secrets:
    runs-on: ubuntu-latest
    name: example job to define secrets
    steps:
      - name: Retrieve secret
        env:
          super_secret: ${{ secrets.SUPERSECRET }}
        run: |
          echo "$super_secret"

