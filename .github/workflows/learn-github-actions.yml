name: learn-github-actions

on:
  push:
    paths:
      - 'backend/'
      - '**/ansible/'
      - '**/learn-github-actions.yml'
  workflow_dispatch:

env:
  BACKEND_DIR: 'backend'
  DEVOPS_DIR: 'devops'

jobs:

  secrets-analysis:
    runs-on: ubuntu-latest
    name: Analisys secrets
    steps:
      - uses: actions/checkout@v2
      - name: trufflehog scaning
        run: |
          docker run --rm -v "$(pwd):/proj" dxa4481/trufflehog --regex -x .trufflehog file:///proj
          exit 0
      - name: Upload output file
        uses: actions/upload-artifact@v2
        with:
          name: trufflehog-scan
          path: trufflehog-scan.txt

  build:
    runs-on: ubuntu-latest
    needs: secrets-analysis
    defaults:
      run:
        working-directory: ${{ env.BACKEND_DIR }}
    steps:
      - uses: actions/checkout@v2
      - name: build step
        run: echo "building..."
      - name: force failure
        run: exit 1
#      - uses: 8398a7/action-slack@v3
#          with:
#            status: ${{ job.status }}
#            fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
#          env:
#            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
#          if: always() # Pick up events even if the job fails or is canceled.
      - name: slack notification
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1.15.0
        with:
          channel-id: 'kata-jenkins'  # Slack channel id to post message
          slack-message: 'Build failure!'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build
    name: build docker image
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        run: echo "releasing..."

  deploy:
    runs-on: ubuntu-latest
    needs: release
    name: Deploy example
    steps:
      - uses: actions/checkout@v2
      - name: deploy step
        run: echo "deploying..."
#      - name: Run playbook
#        uses: dawidd6/action-ansible-playbook@v2
#        with:
#          playbook: deploy.yml
#          # Optional, directory where playbooks live
#          directory: ${{ env.DEVOPS_DIR }}/ansible/
#          key: ${{secrets.SSH_PRIVATE_KEY}}
#          inventory: |
#            [all]
#            ${{ secrets.REMOTE_HOST }} ansible_user=${{ secrets.REMOTE_USER }}
#          options: |
#            --extra-vars nginx_image="nginx:1.21.3-alpine"
#            --extra-vars backend_image="jjquispeopx/backend"
#            --extra-vars registry_user=${{secrets.REGISTRY_USER}}
#            --extra-vars registry_token=${{secrets.REGISTRY_TOKEN}}
#            --verbose

#  example-job:
#    runs-on: ubuntu-latest
#    name: Save output
#    steps:
#      - shell: bash
#        run: |
#          echo "hello humans.!" > output.log
#      - name: Upload output file
#        uses: actions/upload-artifact@v2
#        with:
#          name: output-log-file
#          path: output.log
#
#  example-secrets:
#    runs-on: ubuntu-latest
#    name: example job to define secrets
#    steps:
#      - name: Retrieve secret
#        env:
#          super_secret: ${{ secrets.SUPERSECRET }}
#        run: |
#          echo "$super_secret"
