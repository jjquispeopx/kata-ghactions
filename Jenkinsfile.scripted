
properties([
  parameters([
    string(defaultValue: 'Hello', description: 'How should I greet the world?', name: 'Greeting'),
    string(defaultValue: 'TEST', description: 'How should I greet the world?', name: 'STAGE'),
    string(defaultValue: 'v0.1', description: 'How should I greet the world?', name: 'TAGGIN'),
  ])
])

node {

  env.IMAGE = 'app-backend'

  try {
    checkout scm

    stage('preparation') {
      sh "git --no-pager diff --name-only HEAD~1 | sort -u | uniq > changelist.txt"
      env.TAG = sh(script: "git rev-parse HEAD | cut -c1-12", returnStdout: true).trim()
      script {
        env.FILENAME = readFile "changelist.txt"
      }
    }

    stage('build') {
      echo 'building...'
      echo "${params.Greeting} World!"
      echo "${params.STAGE} World!"
      echo "${env.REGISTRY_PASS}"
      sh "echo ${params.STAGE}"
      sh "echo $TAG"
      withCredentials([
        string(credentialsId: 'slack-secret', variable: 'REGISTRY_PASS')
      ]) {
        sh "sh scripts/build.sh"
      }
      
      if("${env.FILENAME}".indexOf("backend/")) {
        echo "backend building..."
      } 
      sh "echo $WORKSPACE"
      sh "printenv"
    }

    stage('test') {
      echo "${params.STAGE} World!"
      echo 'testing...'
    }

    stage('release') {
      echo 'pushing...'
    }

    stage('deploy') {
      echo 'deploying...'
    }
 
    currentBuild.result = "Success"
  }
  catch (e) {
    echo 'Job FAILED.!'
    currentBuild.result = "Failed"
    throw e
  }
  finally {
    slackSend(channel: "kata-jenkins", message: "https://www.nytimes.com ${currentBuild.result}", sendAsText: true)
  }
}
